'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Slider = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

var _bricksNs = require('./bricks-ns.js');

var _bricksNs2 = _interopRequireDefault(_bricksNs);

var _backdrop = require('./backdrop.js');

var _backdrop2 = _interopRequireDefault(_backdrop);

require('./slider.less');

var _sliderItem = require('./slider-item.js');

var _sliderItem2 = _interopRequireDefault(_sliderItem);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Slider = exports.Slider = (0, _createReactClass2.default)({
  displayName: 'Slider',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.PureRenderMixin, UU5.Common.ElementaryMixin, UU5.Common.ContentMixin, UU5.Common.ColorSchemaMixin, UU5.Common.NestingLevelMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _bricksNs2.default.name("Slider"),
    nestingLevelList: UU5.Environment.getNestingLevelList('bigBoxCollection', 'box'),
    classNames: {
      main: _bricksNs2.default.css("slider"),
      vertical: _bricksNs2.default.css("slider-vertical"),
      track: _bricksNs2.default.css("slider-track"),
      selection: _bricksNs2.default.css("slider-selection"),
      pointer: _bricksNs2.default.css("slider-pointer"),
      active: _bricksNs2.default.css("slider-active"),
      size: _bricksNs2.default.css("slider-size-")
    },
    defaults: {
      childTagName: 'UU5.Bricks.Slider.Item'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    vertical: _propTypes2.default.bool,
    min: _propTypes2.default.number,
    max: _propTypes2.default.number,
    step: _propTypes2.default.number,
    value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number)]),
    onChange: _propTypes2.default.func,
    onChanged: _propTypes2.default.func,
    size: _propTypes2.default.oneOf(['s', 'm', 'l', 'xl']),
    allowTags: _propTypes2.default.array
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      vertical: false,
      min: 0,
      max: 10,
      step: 1,
      onChange: null,
      onChanged: null,
      size: 'm',
      allowTags: [],
      value: null // default: min
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    this._pointers = [];

    return {
      active: false,
      activePointer: null
    };
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (nextProps.controlled) {
      this.setValue(nextProps.value);
    }
  },


  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  getPointers: function getPointers() {
    return this._pointers;
  },
  getValue: function getValue() {
    var values = this._pointers.map(function (item) {
      return item.getValue();
    });
    if (values.length === 0) values = this.props.min;else if (values.length === 1) values = values[0];

    return values;
  },
  setValue: function setValue(value, setStateCallback) {
    var _this = this;

    var values = this._getValueArray(value);

    values.forEach(function (item, i) {
      _this._pointers[i] && _this._pointers[i].setValue(item, setStateCallback);
    });

    return this;
  },
  increase: function increase(value, setStateCallback) {
    var _this2 = this;

    var values = this._getValueArray(value);

    values.forEach(function (item, i) {
      _this2._pointers[i] && _this2._pointers[i].increase(item, setStateCallback);
    });

    return this;
  },
  decrease: function decrease(value, setStateCallback) {
    var _this3 = this;

    var values = this._getValueArray(value);

    values.forEach(function (item, i) {
      _this3._pointers[i] && _this3._pointers[i].decrease(item, setStateCallback);
    });

    return this;
  },

  //@@viewOff:interface

  //@@viewOn:overridingMethods
  expandChildProps_: function expandChildProps_(child, childIndex) {
    var _this4 = this;

    var newChildProps = UU5.Common.Tools.mergeDeep({}, child.props);
    newChildProps.name = newChildProps.name || (this.props.name ? this.props.name + "-" + childIndex : null);
    newChildProps.disabled = newChildProps.disabled || this.isDisabled();
    newChildProps._min = this.props.min;
    newChildProps._max = this.props.max;
    newChildProps._step = this.props.step;
    newChildProps._checkValue = this._checkValue;
    newChildProps._getStyle = this._getStyle;

    if (newChildProps.value === null) {
      var value = this._getValueArray();
      newChildProps.value = value[childIndex];
    }

    var ref = newChildProps.ref_;
    newChildProps.ref_ = function (item) {
      _this4._pointers.push(item);
      typeof ref === "function" && ref(item);
    };

    return newChildProps;
  },
  shouldChildRender_: function shouldChildRender_(child) {
    var childTagName = UU5.Common.Tools.getChildTagName(child);
    var childTagNames = this.props.allowTags.concat(this.getDefault().childTagName);
    return childTagNames.indexOf(childTagName) > -1;
  },

  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getValueArray: function _getValueArray(value) {
    value === undefined && (value = this.props.value);
    return Array.isArray(value) ? value.slice(0, 2) : [value];
  },
  _checkValue: function _checkValue(value) {
    if (value === null) {
      value = this.props.min;
    } else {
      value = Math.round(value / this.props.step) * this.props.step;

      if (value < this.props.min) {
        value = this.props.min;
      } else if (value > this.props.max) {
        value = this.props.max;
      }
    }

    return value;
  },
  _prepareIfcValue: function _prepareIfcValue(value, nearestPointer) {
    var values = this._pointers.map(function (item) {
      return item === nearestPointer ? value : item.getValue();
    });

    return values.length === 1 ? values[0] : values;
  },
  _changeValue: function _changeValue(value, e) {
    if (this.state.nearestPointer.getValue() !== value) {
      var values = this._prepareIfcValue(value, this.state.nearestPointer);

      var onChange = this._getOnChange(values, e);
      var onChanged = void 0;
      !onChange && (onChanged = this._getOnChanged(values, e));

      onChange ? onChange(this) : this.state.nearestPointer.setValue(value, onChanged);
    }

    return this;
  },
  _activate: function _activate(e) {
    var _this5 = this;

    var value = this._countValue(e),
        onChange = void 0,
        onChanged = void 0;
    var nearestPointer = this._getNearestPointer(value);

    if (this.getValue() !== value) {
      var values = this._prepareIfcValue(value, nearestPointer);
      onChange = this._getOnChange(values, e);
      !onChange && (onChanged = this._getOnChanged(values, e));
    }

    nearestPointer.setValue(value);

    this.setState({
      active: true,
      nearestPointer: nearestPointer
    }, onChange || onChanged ? function () {
      return onChange ? onChange(_this5) : onChanged(_this5);
    } : null);
    return this;
  },
  _deactivate: function _deactivate(e) {
    this.setState({ active: false, nearestPointer: null });
    return this;
  },
  _isActive: function _isActive() {
    return this.state.active;
  },
  _move: function _move(e) {
    if (this._isActive()) {
      this._changeValue(this._countValue(e), e);
    }
    return this;
  },
  _getOnChange: function _getOnChange(value, e) {
    var _this6 = this;

    var onChange = void 0;
    if (typeof this.props.onChange === 'function') {
      onChange = function onChange() {
        _this6.props.onChange({ value: value, component: _this6, event: e });
      };
    }
    return onChange;
  },
  _getOnChanged: function _getOnChanged(value, e) {
    var _this7 = this;

    var onChanged = void 0;
    if (typeof this.props.onChanged === 'function') {
      onChanged = function onChanged() {
        _this7.props.onChanged({ value: value, component: _this7, event: e });
      };
    }
    return onChanged;
  },
  _getStartPositions: function _getStartPositions() {
    var el = this._track;
    var xPos = 0;
    var yPos = -1 * window.pageYOffset;

    while (el) {
      xPos += el.offsetLeft - el.scrollLeft + el.clientLeft;
      yPos += el.offsetTop;
      el = el.offsetParent;
    }

    return { x: xPos, y: yPos };
  },
  _countValue: function _countValue(e) {
    var sliderStart = this.props.vertical ? this._getStartPositions().y : this._getStartPositions().x;
    var actualPosition = this.props.vertical ? e.clientY : e.clientX;
    if (e.touches) {
      actualPosition = this.props.vertical ? e.touches.item(0).clientY : e.touches.item(0).clientX;
    }

    var absolutePosition = actualPosition - sliderStart;
    var end = this.props.vertical ? this._track.offsetHeight : this._track.offsetWidth;

    var min = this.props.min;
    var max = this.props.max;
    var step = this.props.step;

    var absoluteMax = max - min;

    var realValue = absolutePosition / (end / absoluteMax);
    var value = min + Math.round(realValue / step) * step;

    this.props.vertical && (value = this.props.max + this.props.min - value);
    value > this.props.max && (value = this.props.max);
    value < this.props.min && (value = this.props.min);

    return value;
  },
  _getMainAttrs: function _getMainAttrs() {
    var _this8 = this;

    var attrs = this.getMainAttrs();

    attrs.className += ' ' + this.getClassName('size') + this.props.size;
    this.props.vertical && (attrs.className += ' ' + this.getClassName('vertical'));

    if (!this.isDisabled()) {
      this._isActive() && (attrs.className += ' ' + this.getClassName().active);

      attrs.onMouseDown = this._activate;
      attrs.onMouseMove = this._move;
      attrs.onMouseUp = this._deactivate;
      attrs.onTouchStart = this._activate;
      attrs.onTouchMove = function (e) {
        e.preventDefault();
        _this8._move(e);
      };
      attrs.onTouchEnd = this._deactivate;
      attrs.onMouseLeave = this._deactivate;
    }

    return attrs;
  },
  _getBackdropProps: function _getBackdropProps() {
    var _this9 = this;

    var backdropId = this.getId() + "-backdrop";

    return {
      hidden: !this._isActive(),
      id: backdropId,
      onClick: function onClick(backdrop, event) {
        return event.target.id === backdropId && _this9._deactivate();
      },
      mainAttrs: {
        onMouseUp: this._deactivate,
        onTouchEnd: this._deactivate
      }
    };
  },
  _getStyle: function _getStyle(value) {
    var size = (this._checkValue(value) - this.props.min) / (this.props.max - this.props.min) * 100 + '%';
    return this.props.vertical ? { height: size } : { width: size };
  },
  _getNearestPointer: function _getNearestPointer(newValue) {
    var min = Infinity,
        nearestPointer = void 0;
    this._pointers.forEach(function (item) {
      var value = Math.abs(newValue - item.getValue());

      if (min > value) {
        min = value;
        nearestPointer = item;
      }
    });

    return nearestPointer;
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    var _this10 = this;

    var pointers = this.getChildren();

    if (!pointers || pointers.length === 0) {
      var values = this._getValueArray();
      pointers = this.buildChildren({
        children: values.map(function (value) {
          return _react2.default.createElement(_sliderItem2.default, { value: value });
        })
      });
    } else if (pointers && pointers.length > 2) {
      pointers = pointers.slice(0, 2);
    }

    return this.getNestingLevel() ? _react2.default.createElement(
      'div',
      this._getMainAttrs(),
      _react2.default.createElement(_backdrop2.default, this._getBackdropProps()),
      _react2.default.createElement(
        'div',
        { className: this.getClassName('track'), ref: function ref(item) {
            return _this10._track = item;
          } },
        pointers
      )
    ) : null;
  }
  //@@viewOff:render

});

Slider.Item = _sliderItem2.default;

exports.default = Slider;