'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ProductCatalogue = exports.UuForum = exports.UuBmlDraw = exports.DocKit = exports.Bricks = exports.App = exports.Environment = exports.Common = undefined;

var _common = require('./common/common.js');

var Common = _interopRequireWildcard(_common);

var _environment = require('./environment/environment.js');

var _environment2 = _interopRequireDefault(_environment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var Plus4U5 = window.Plus4U5 || {};

exports.Common = Common;

Plus4U5.Common = Common;

exports.Environment = _environment2.default;

Plus4U5.Environment = _environment2.default;

// workaround so that on-demand loaded UU5 modules can insert their own components
// into UU5 exports; i.e. if an application uses following:
//  import * as UU5 from "uu5g04";  // UU5 is a local variable containing new (separate) instance of exports
//  import "uu5g04-forms";
// then uu5g04-forms (UU5 module) wants to add "Forms" key into "root" of uu5g04 exports which
// isn't possible (exports are frozen by SystemJS), so instead uu5g04-forms will inject its components into
// pre-existing "Forms" key within uu5g04 exports
var App = Plus4U5.App = {};
exports.App = App;


var Bricks = Plus4U5.Bricks = {};
exports.Bricks = Bricks;


var DocKit = Plus4U5.DocKit = {};
exports.DocKit = DocKit;


var UuBmlDraw = Plus4U5.UuBmlDraw = {};
exports.UuBmlDraw = UuBmlDraw;


var UuForum = Plus4U5.UuForum = {};
exports.UuForum = UuForum;


var ProductCatalogue = Plus4U5.ProductCatalogue = {};
exports.ProductCatalogue = ProductCatalogue;


window.Plus4U5 = Plus4U5;
exports.default = Plus4U5;