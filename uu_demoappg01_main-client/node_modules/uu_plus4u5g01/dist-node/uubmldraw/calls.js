"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _uu_appg01_core = require("uu_appg01_core");

var _uu_appg = require("uu_appg01");

var _uu5g = require("uu5g04");

var UU5 = _interopRequireWildcard(_uu5g);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var Calls = {

  call: function call(method, url, params, dtoIn) {
    //let call = () => {
    _uu_appg.Client[method](url, dtoIn.data).then(function (response) {
      // add logged user identity information
      response = response || {};
      response.data = response.data || {};

      dtoIn.done(response.data);
    }, function (response) {
      // add logged user identity information
      response = response || {};
      response.data = response.data || {};

      dtoIn.fail(response);
    });
  },

  loadDiagram: function loadDiagram(dtoIn) {
    var tidAwid = dtoIn.data.tidAwid || dtoIn.tidAwid;
    delete dtoIn.data.tidAwid;
    var commandUri = Calls.getCommandUri('loadDiagram', tidAwid);
    Calls.call("post", commandUri.toString(), null, dtoIn);
  },
  lock: function lock(dtoIn) {
    var tidAwid = dtoIn.data.tidAwid || dtoIn.tidAwid;
    delete dtoIn.data.tidAwid;
    var commandUri = Calls.getCommandUri('lock', tidAwid);
    Calls.call("post", commandUri.toString(), null, dtoIn);
  },


  getCommandUri: function getCommandUri(useCase, tidAwid, params) {
    !tidAwid && UU5.Common.Tools.error("tidAwid was not set for useCase " + useCase + ".", { useCase: useCase });
    useCase = useCase.match(/^\//) ? useCase : "/" + useCase;

    // TODO baseUri from some constant / config?
    var baseUri = "https://uuos9.plus4u.net/uu-uubmldrawg03-main/" + tidAwid + "/";
    // let baseUri = `http://localhost:6221/uu-uubmldraw-main/${tidAwid}/`;

    var uriBuilder = _uu_appg01_core.Uri.UriBuilder.parse(baseUri).setUseCase(useCase);
    if (params && (typeof params === "undefined" ? "undefined" : _typeof(params)) === 'object') {
      for (var key in params) {
        uriBuilder.setParameter(key, params[key]);
      }
    }

    return uriBuilder.toUri();
  }

};

exports.default = Calls;