'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Loading = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

require('uu5g04-bricks');

require('./loading.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Loading = exports.Loading = (0, _createReactClass2.default)({
  displayName: 'Loading',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.ContentMixin, UU5.Common.ColorSchemaMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'Plus4U5.Bricks.Loading',
    classNames: {
      main: 'plus4u5-bricks-loading',
      inline: 'plus4u5-bricks-loading-inline'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    inline: _propTypes2.default.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      inline: false
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    var mainPropsToPass = this.getMainPropsToPass(['UU5_Common_BaseMixin', 'UU5_Common_ElementaryMixin']);
    if (this.props.inline) {
      mainPropsToPass.className += ' ' + this.getClassName('inline');
    }
    var content = this.props.content || this.props.children;

    return _react2.default.createElement(
      UU5.Bricks.Div,
      mainPropsToPass,
      _react2.default.createElement(UU5.Bricks.Loading, { inline: true, colorSchema: this.props.colorSchema }),
      content && _react2.default.createElement(UU5.Bricks.Div, { content: content })
    );
  }
  //@@viewOff:render

});

exports.default = Loading;