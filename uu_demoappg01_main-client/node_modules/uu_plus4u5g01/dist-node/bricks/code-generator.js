'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CodeGenerator = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

require('uu5g04-bricks');

require('./code-generator.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CodeGenerator = exports.CodeGenerator = (0, _createReactClass2.default)({
  displayName: 'CodeGenerator',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.ContentMixin, UU5.Common.ColorSchemaMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'Plus4U5.Bricks.CodeGenerator',
    classNames: {
      main: 'plus4u5-bricks-code-generator'
    },
    defaults: {
      content: 'Generate code'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    tagName: _propTypes2.default.string,
    awid: _propTypes2.default.string,
    hex: _propTypes2.default.number,
    size: _propTypes2.default.string,
    displayBlock: _propTypes2.default.bool,
    bgStyle: _propTypes2.default.string,
    pressed: _propTypes2.default.bool
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      tagName: null,
      awid: null,
      hex: 64,
      size: 'm',
      displayBlock: false,
      pressed: false
    };
  },
  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _copy: function _copy() {
    var code = UU5.Common.Tools.generateUUID(this.props.hex);
    var result = code;

    if (this.props.tagName) {
      result = '<' + this.props.tagName;
      this.props.awid && (result += ' awid=\'' + this.props.awid + '\'');
      result += ' code=\'' + code + '\'';
      result += '/>';
    }
    UU5.Common.Tools.copyToClipboard(result);

    return this;
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    var content = this.getContent();
    !content && !this.props.children && (content = this.props.tagName || this.getDefault().content);

    return _react2.default.createElement(
      UU5.Bricks.Button,
      _extends({}, this.getMainPropsToPass(), { onClick: this._copy, content: content, colorSchema: this.props.colorSchema, size: this.props.size, displayBlock: this.props.displayBlock, bgStyle: this.props.bgStyle, pressed: this.props.pressed }),
      this.props.children
    );
  }
  //@@viewOff:render
});

exports.default = CodeGenerator;