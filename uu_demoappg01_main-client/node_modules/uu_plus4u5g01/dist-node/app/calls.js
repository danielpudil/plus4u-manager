"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _uu_oidcg = require("uu_oidcg01");

var _uu_plus4u5g = require("uu_plus4u5g01");

var Plus4U5 = _interopRequireWildcard(_uu_plus4u5g);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var Calls = {
  loadActivities: function loadActivities(dtoIn) {
    Plus4U5.Common.Calls.getPersonalRoleUri(function (uri) {
      var commandUri = 'https://api.plus4u.net/ues/wcp/ues/digitalworkspace/digitalworkspace/UESDigitalWorkspace/getActiveRecordList';
      Plus4U5.Common.Calls.call('get', commandUri, { uesuri: uri, query: 'isUnread=true AND pending=false' }, dtoIn);
    }, dtoIn.fail);
  },


  loadNavigator: function loadNavigator(dtoIn) {
    Plus4U5.Common.Calls.getPersonalRoleUri(function (uri) {
      return Plus4U5.Common.Calls.getPropertyValue(uri + 'VAR.UES.COR.SYSTEM_NAVIGATOR', dtoIn.done, dtoIn.fail);
    }, dtoIn.fail);
  },

  loadNavigationBar: function loadNavigationBar(dtoIn) {
    // we can get either direct link to navigationBarUri (simple navigation bar, only one row, on organizational units)
    if (dtoIn.data.navigationBarUri) {
      Plus4U5.Common.Calls.getPropertyValue(dtoIn.data.navigationBarUri, function (dtoOut) {
        typeof dtoIn.done === "function" && dtoIn.done({ data: [Plus4U5.Common.Tools.base64DecodeUnicode(dtoOut.dataHandler).data] });
      }, dtoIn.fail);
    } else {
      var mainEntityUri = dtoIn.data.mainEntityUri;

      var territoryPart = mainEntityUri.split(':')[1];
      var acrUri = "ues:" + territoryPart + ":" + _uu_oidcg.Session.currentSession.getIdentity().uuIdentity;

      var calls = ["UU.BEM/NAVIGATION_BAR_1/PORTAL", "UU.BEM/NAVIGATION_BAR_2/PORTAL"].map(function (code) {
        return new Promise(function (resolve, reject) {
          Plus4U5.Common.Calls.getPropertyValue(acrUri + ":" + code, function (value) {
            return resolve(Plus4U5.Common.Tools.base64DecodeUnicode(value.dataHandler).data);
          }, reject);
        });
      });

      Promise.all(calls).then(function (values) {
        return typeof dtoIn.done === "function" && dtoIn.done({ data: values });
      }, dtoIn.fail);
    }
  }
};

exports.default = Calls;