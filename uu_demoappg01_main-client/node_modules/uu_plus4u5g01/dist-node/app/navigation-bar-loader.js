"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NavigationBarLoader = undefined;

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require("create-react-class");

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require("uu5g04");

var UU5 = _interopRequireWildcard(_uu5g);

require("uu5g04-bricks");

var _uu_plus4u5g = require("uu_plus4u5g01");

var Plus4U5 = _interopRequireWildcard(_uu_plus4u5g);

var _calls = require("./calls.js");

var _calls2 = _interopRequireDefault(_calls);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NavigationBarLoader = exports.NavigationBarLoader = (0, _createReactClass2.default)({
  displayName: "NavigationBarLoader",


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.PureRenderMixin, UU5.Common.LoadMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: 'Plus4U5.App.NavigationBarLoader',
    classNames: {
      main: 'plus4u5-app-navigation-bar',
      welcome: 'plus4u-app-navigation-welcome-row',
      singleRow: 'plus4u-app-navigation-bar-single-line',
      line: 'plus4u-app-navigation-bar-line',
      color: 'plus4u5-app-navigator-',
      touchIcon: 'plus4u5-app-navigator-ti',
      center: 'plus4u5-app-navigation-bar-center',
      sides: 'plus4u5-app-navigation-bar-sides'
    },
    calls: {
      onLoad: 'loadNavigationBar'
    },
    navItemCodes: {
      terrPortal: 'USER_ENTRY_TERRITORY_PORTAL',
      artPortal: 'ARTIFACT_PORTAL'
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    mainEntityUri: _propTypes2.default.string.isRequired,
    navigationBarUri: _propTypes2.default.string,
    target: _propTypes2.default.oneOf(["auto", "_blank", "blank", "_top", "top", "_self", "self", "_parent", "parent"]),
    uuIdentityName: _propTypes2.default.string
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      navigationBarUri: null,
      target: "_blank",
      uuIdentityName: ''
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    return {
      navigationData: null,
      secondNavigationData: null
    };
  },
  componentWillMount: function componentWillMount() {
    this.setCalls(_calls2.default);
  },

  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  //@@viewOff:interface

  //@@viewOn:overridingMethods
  getOnLoadData_: function getOnLoadData_(props) {
    return {
      mainEntityUri: props.mainEntityUri,
      navigationBarUri: props.navigationBarUri
    };
  },

  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getItem: function _getItem(item, index) {
    var uriArray = item.iconUri.split('?');
    var urlArray = uriArray[0].split('/');

    // build classNames
    var classNames = this.getClassName('touchIcon');
    var colorSchema = this._getColor(UU5.Common.Tools.decodeQuery(uriArray[uriArray.length - 1]).color);
    classNames = classNames + ' ' + colorSchema;

    //build uri (there can be substitute codes)
    var tiUrl = void 0;
    if (item.code === this.constructor.navItemCodes.artPortal) {
      var tiUesUri = this.props.mainEntityUri + "?UC102011";
      tiUrl = Plus4U5.Common.Tools.getLegacyUrl(tiUesUri);
    } else if (item.code === this.constructor.navItemCodes.terrPortal) {
      var _tiUesUri = this.props.mainEntityUri + "?UC10F012";
      tiUrl = Plus4U5.Common.Tools.getLegacyUrl(_tiUesUri);
    } else {
      tiUrl = Plus4U5.Common.Tools.getLegacyUrl(item.uri);
    }

    // build target
    var target = void 0;
    if (this.props.target === "auto") {
      switch (item.target) {
        case 'SELF':
        case 'CURRENT_WINDOW':
          target = '_parent';
          break;

        case 'NEW':
        case 'NEW_WINDOW':
          target = '_blank';
          break;

        default:
          target = null;
      }
    } else {
      target = this.props.target;
    }

    var tiProps = {
      className: classNames,
      icon: 'plus4u-glyphicon-' + urlArray[urlArray.length - 1].replace(/_/g, '-').toLowerCase(),
      content: "<uu5string/>" + item.text,
      tooltip: item.tooltip,
      target: target,
      href: tiUrl,
      key: (item.uri || item.code) + '-' + index
    };

    return _react2.default.createElement(UU5.Bricks.TouchIcon, tiProps);
  },
  _getColor: function _getColor(color) {
    return this.getClassName('color') + color;
  },
  _getWelcome: function _getWelcome(navData) {
    if (navData && navData.welcomeText) {
      var welcome = navData.welcomeText;
      var name = this.props.uuIdentityName;
      return welcome.replace(/\${PERSONAL_ROLE_NAME}/g, name);
    }
  },


  isItemLeftAligned: function isItemLeftAligned(item) {
    return item.group === 'up' || item.group === 'UP' || item.code === this.constructor.navItemCodes.artPortal || item.code === this.constructor.navItemCodes.terrPortal;
  },

  _getNavigationRow: function _getNavigationRow(navData) {
    var _this = this;

    var leftGroup = [];
    var rightGroup = [];
    navData.itemList.forEach(function (item) {
      if (_this.isItemLeftAligned(item)) {
        leftGroup.push(item);
      } else {
        rightGroup.push(item);
      }
    });

    if (leftGroup.length === 0 || rightGroup.length === 0) {
      return _react2.default.createElement(
        UU5.Bricks.Div,
        { className: this.getClassName('center') },
        rightGroup.map(function (item, index) {
          return _this._getItem(item, index);
        })
      );
    } else {
      return _react2.default.createElement(
        UU5.Bricks.Div,
        { className: this.getClassName('sides') },
        _react2.default.createElement(
          UU5.Bricks.Div,
          null,
          leftGroup.map(function (item, index) {
            return _this._getItem(item, index);
          })
        ),
        _react2.default.createElement(
          UU5.Bricks.Div,
          null,
          rightGroup.map(function (item, index) {
            return _this._getItem(item, index);
          })
        )
      );
    }
  },
  _getNavigationBar: function _getNavigationBar() {
    var navItems = this.state.dtoOut.data[0];
    var secondNavItems = this.state.dtoOut.data[1];

    var welcomeText = navItems && navItems.welcomeText && _react2.default.createElement(
      UU5.Bricks.Div,
      { className: this.getClassName('welcome') + ' ' + this.getClassName('center') },
      this._getWelcome(navItems)
    );

    var firstRow = navItems && this._getNavigationRow(navItems);

    var line = secondNavItems && _react2.default.createElement(UU5.Bricks.Line, { size: "s", className: this.getClassName('line') });

    var secondRow = secondNavItems && this._getNavigationRow(secondNavItems);

    var mainProps = this.getMainPropsToPass();
    if (this.props.navigationBarUri) {
      mainProps.className = mainProps.className + ' ' + this.getClassName('singleRow');
    }
    return _react2.default.createElement(
      UU5.Bricks.Div,
      mainProps,
      welcomeText,
      firstRow,
      line,
      secondRow
    );
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    return this.getLoadFeedbackChildren(this._getNavigationBar);
  }
} //@@viewOff:render

);

exports.default = NavigationBarLoader;