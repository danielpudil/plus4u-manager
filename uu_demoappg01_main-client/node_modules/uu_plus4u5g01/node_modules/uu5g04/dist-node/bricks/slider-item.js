'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uu5g = require('uu5g04');

var UU5 = _interopRequireWildcard(_uu5g);

var _bricksNs = require('./bricks-ns.js');

var _bricksNs2 = _interopRequireDefault(_bricksNs);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (0, _createReactClass2.default)({
  displayName: 'slider-item',


  //@@viewOn:mixins
  mixins: [UU5.Common.BaseMixin, UU5.Common.ElementaryMixin, UU5.Common.ContentMixin],
  //@@viewOff:mixins

  //@@viewOn:statics
  statics: {
    tagName: _bricksNs2.default.name("Slider.Item"),
    classNames: {
      main: _bricksNs2.default.css("slider-selection"),
      pointer: _bricksNs2.default.css("slider-pointer"),
      input: _bricksNs2.default.css("slider-input")
    }
  },
  //@@viewOff:statics

  //@@viewOn:propTypes
  propTypes: {
    value: _propTypes2.default.number,
    _min: _propTypes2.default.number,
    _max: _propTypes2.default.number,
    _step: _propTypes2.default.number,
    _getStyle: _propTypes2.default.func,
    _checkValue: _propTypes2.default.func
  },
  //@@viewOff:propTypes

  //@@viewOn:getDefaultProps
  getDefaultProps: function getDefaultProps() {
    return {
      value: null
    };
  },

  //@@viewOff:getDefaultProps

  //@@viewOn:standardComponentLifeCycle
  getInitialState: function getInitialState() {
    return {
      value: this.props._checkValue(this.props.value)
    };
  },
  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
    return nextState.value !== this.state.value;
  },

  //@@viewOff:standardComponentLifeCycle

  //@@viewOn:interface
  getValue: function getValue() {
    return this.state.value;
  },
  setValue: function setValue(value, setStateCallback) {
    if (!this.isDisabled()) {
      this.setState({ value: this.props._checkValue(value) }, setStateCallback);
    }
  },
  increase: function increase(value, setStateCallback) {
    var _this = this;

    this.setState(function (prevState) {
      return { value: _this.props._checkValue(prevState.value + (value || _this.props._step)) };
    }, setStateCallback);
    return this;
  },
  decrease: function decrease(value, setStateCallback) {
    var _this2 = this;

    this.setState(function (prevState) {
      return { value: _this2.props._checkValue(prevState.value - (value || _this2.props._step)) };
    }, setStateCallback);
    return this;
  },

  //@@viewOff:interface

  //@@viewOn:overridingMethods
  //@@viewOff:overridingMethods

  //@@viewOn:componentSpecificHelpers
  _getMainAttrs: function _getMainAttrs() {
    var attrs = this.getMainAttrs();
    attrs.style = this.props._getStyle(this.state.value);
    attrs.name = null;
    return attrs;
  },
  _getInputAttrs: function _getInputAttrs() {
    var _this3 = this;

    var attrs = {
      className: this.getClassName().input,
      type: "range",
      name: this.getName(),
      min: this.props._min,
      max: this.props._max,
      step: this.props._step,
      value: this.getValue(),
      disabled: this.isDisabled()
    };

    if (!this.isDisabled()) {
      attrs.onChange = function (e) {
        return _this3._changeValue(e.target.value, e);
      };
    }

    return attrs;
  },

  //@@viewOff:componentSpecificHelpers

  //@@viewOn:render
  render: function render() {
    return _react2.default.createElement(
      'div',
      this._getMainAttrs(),
      _react2.default.createElement('input', this._getInputAttrs()),
      _react2.default.createElement(
        'div',
        { className: this.getClassName('pointer') },
        this.getChildren()
      )
    );
  }
  //@@viewOff:render

});